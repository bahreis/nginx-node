version: '3'

services:
  nginx:
    build:
      context: ./nginx
    container_name: nginx
    networks:
      - node-network
    ports: 
      - "8080:80"
    environment:
      - NGINX_HOST=node.com
      - NGINX_PORT=80  
    depends_on: 
       - app     
  app:
    build: 
      context: node
    container_name: app
    command: npm run dev
    entrypoint: dockerize -wait tcp://db:5432 -timeout 20s docker-entrypoint.sh 
    networks: 
      - node-network
    volumes: 
      - .node:/usr/app/
      - /usr/app/node_modules
    tty: true
    ports: 
      - "3000:3000"
    depends_on: 
       - db 
  db:
    image: postgres:14.2
    container_name: db
    restart: always
    tty: true
    environment:
      POSTGRES_USER: 'postgres'
      POSTGRES_PASSWORD: 'postgres'
      POSTGRES_DB: 'pgsql'
    ports:
      - '5432:5432'
    volumes:
      - ./postgres/data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - node-network

networks:
  node-network:
    driver: bridge
